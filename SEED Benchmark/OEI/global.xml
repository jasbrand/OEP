<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:context="http://www.springframework.org/schema/context"
      xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:https="http://www.mulesoft.org/schema/mule/https"
      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
      xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
      xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
      xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:ss="http://www.springframework.org/schema/security" xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.8/mule-spring-security.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd">
  <spring:beans>
    <spring:bean class="org.mule.util.store.SimpleMemoryObjectStore" id="objectStore"/>
  </spring:beans>
  <context:property-placeholder location="oei.properties"/>
  <vm:endpoint doc:name="VM" exchange-pattern="one-way" name="VM.DLQ" path="deadletterqueue"/>
  <queued-asynchronous-processing-strategy doc:name="Queued Asynchronous Processing Strategy" maxThreads="1"
                                           name="Queued_Asynchronous_Processing_Strategy"/>
  <cxf:configuration doc:name="CXF Configuration" enableMuleSoapHeaders="true" initializeStaticBusInstance="true"
                     name="CXF_Configuration"/>
  <sfdc:config doc:name="Salesforce" name="Testbed-Salesforce" password="${salesforce.password}"
               securityToken="${salesforce.token}" url="${salesforce.url}" username="${salesforce.user}">
    <sfdc:connection-pooling-profile exhaustedAction="WHEN_EXHAUSTED_GROW" initialisationPolicy="INITIALISE_ONE"/>
  </sfdc:config>
  <http:request-config basePath="/api/${SEED.apiversion}" doc:name="HTTP Request Configuration" host="${SEED.url}" name="SEED_API"
                       port="${SEED.port}" protocol="${SEED.protocol}">
    <http:basic-authentication password="${SEED.apikey}" preemptive="true" username="${SEED.user}"/>
  </http:request-config>
  <flow name="DeadLetterFlow">
    <vm:inbound-endpoint doc:name="VM" exchange-pattern="one-way" ref="VM.DLQ"/>
    <logger doc:name="Logger" level="INFO" message="Current Payload: #[payload]"/>
    <choice doc:name="Choice">
      <when expression="#[exception.causedBy(org.mule.routing.CompositeRoutingException)]">
        <foreach collection="#[exception.getExceptions().values()]" doc:name="For Each">
          <logger doc:name="Logger" level="INFO"
                  message="#[groovy: new com.psdconsulting.RootException(payload).toString()]"/>
        </foreach>
      </when>
      <otherwise>
        <logger doc:name="Logger" level="INFO" message="Exception: #[exception]"/>
      </otherwise>
    </choice>
    <smtp:outbound-endpoint doc:name="SMTP" from="${email.sender}" host="${email.host}" password="${email.password}"
                            responseTimeout="10000" subject="${email.subject}" to="${email.recipient}"
                            user="${email.user}"/>
  </flow>
</mule>
